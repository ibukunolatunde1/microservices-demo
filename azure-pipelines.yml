# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  containerRegistryDev: 'testuim.azurecr.io'
  containerRegistryQA: 'testuimqa.azurecr.io'
  containerRegistryUAT: 'testuimuat.azurecr.io'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        repository: currency
        command: build
        dockerfile: '$(Build.SourcesDirectory)/src/currencyservice/Dockerfile'
        tags: |
          $(tag)
    - task: Docker@2
      displayName: 'Archive Image'
      inputs:
        repository: currency
        command: save
        arguments: '--output $(Build.ArtifactStagingDirectory)/currency_$(tag).image.tar currency:$(tag)'
        addPipelineData: false
    - task: PublishPipelineArtifact@1
      displayName: 'Publishing Image as Pipeline Artifact'
      inputs:
        path: '$(Build.ArtifactStagingDirectory)'
        artifact: 'ContainerImage'

- stage: 'Dev'
  displayName: 'Deploy to Dev Environment'
  dependsOn: Build
  jobs:
  - deployment: currency_deploy_dev
    environment: dev
    pool:
      vmImage: ubuntu-latest
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - task: Docker@2
            displayName: 'Load Image from Tar'
            inputs:
              command: load
              arguments: '--input $(Pipeline.Workspace)/ContainerImage/currency_$(tag).image.tar'
          - task: Docker@2
            displayName: 'ReTag Image with ACR Name - BuildId'
            inputs:
              containerRegistry: DevContainer # This comes from the Service Connections
              repository: currency
              command: tag
              arguments: 'currency:$(tag) $(containerRegistryDev)/currency:$(tag)' 
          - task: Docker@2
            displayName: 'Push Image to ACR'
            inputs:
              containerRegistry: DevContainer
              repository: currency
              command: push
              tags: $(tag)
              
- stage: 'QA'
  displayName: 'Deploy to Dev Environment'
  dependsOn: Dev
  jobs:
  - deployment: currency_deploy_qa
    environment: qa
    pool:
      vmImage: ubuntu-latest
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - task: Docker@2
            displayName: 'Load Image from Tar'
            inputs:
              command: load
              arguments: '--input $(Pipeline.Workspace)/ContainerImage/currency_$(tag).image.tar'
          - task: Docker@2
            displayName: 'ReTag Image with ACR Name - BuildId'
            inputs:
              containerRegistry: QAContainer # This comes from the Service Connections
              repository: currency
              command: tag
              arguments: 'currency:$(tag) $(containerRegistryQA)/currency:$(tag)' 
          - task: Docker@2
            displayName: 'Push Image to ACR'
            inputs:
              containerRegistry: QAContainer
              repository: currency
              command: push
              tags: $(tag)
              
- stage: 'UAT'
  displayName: 'Deploy to Dev Environment'
  dependsOn: QA
  jobs:
   - deployment: currency_deploy_uat
     environment: uat
     pool:
      vmImage: ubuntu-latest
     strategy:
       runOnce:
         deploy:
          steps:
          - checkout: self
          - task: Docker@2
            displayName: 'Load Image from Tar'
            inputs:
              command: load
              arguments: '--input $(Pipeline.Workspace)/ContainerImage/currency_$(tag).image.tar'
          - task: Docker@2
            displayName: 'ReTag Image with ACR Name - BuildId'
            inputs:
              containerRegistry: UatContainer # This comes from the Service Connections
              repository: currency
              command: tag
              arguments: 'currency:$(tag) $(containerRegistryUAT)/currency:$(tag)' 
              
          - task: Docker@2
            displayName: 'ReTag Image with ACR Name - latest'
            inputs:
              containerRegistry: UatContainer
              repository: currency
              command: tag
              arguments: 'currency:$(tag) $(containerRegistryUAT)/currency:latest'
          - task: Docker@2
            displayName: 'Push Image to ACR'
            inputs:
              containerRegistry: UatContainer
              repository: currency
              command: push
              tags: $(tag)